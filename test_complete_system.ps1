# test_complete_system.ps1 - Test complet du syst√®me Troc-Service
Write-Host "üß™ Test Complet du Syst√®me Troc-Service" -ForegroundColor Green
Write-Host "=" * 60 -ForegroundColor Cyan

# Fonction pour tester un endpoint
function Test-Endpoint {
    param($Url, $Name)
    try {
        $response = Invoke-WebRequest -Uri $Url -Method GET -TimeoutSec 10
        if ($response.StatusCode -eq 200) {
            Write-Host "‚úÖ $Name - $Url" -ForegroundColor Green
            return $true
        } else {
            Write-Host "‚ùå $Name - $Url (Status: $($response.StatusCode))" -ForegroundColor Red
            return $false
        }
    } catch {
        Write-Host "‚ùå $Name - $Url (Erreur: $($_.Exception.Message))" -ForegroundColor Red
        return $false
    }
}

# Test 1: V√©rifier Python et Flask
Write-Host "`nüîç Test 1: V√©rification de l'environnement Python" -ForegroundColor Yellow
try {
    $pythonVersion = python --version 2>&1
    Write-Host "‚úÖ Python: $pythonVersion" -ForegroundColor Green
    
    $flaskVersion = python -c "import flask; print(flask.__version__)" 2>&1
    Write-Host "‚úÖ Flask: $flaskVersion" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Erreur environnement Python: $_" -ForegroundColor Red
    exit 1
}

# Test 2: V√©rifier la structure des fichiers
Write-Host "`nüìÅ Test 2: V√©rification de la structure des fichiers" -ForegroundColor Yellow
$requiredFiles = @(
    "Bafoka-teamZ-back\backend_merge\app_corrected.py",
    "Bafoka-teamZ-back\backend_merge\models.py",
    "Bafoka-teamZ-back\backend_merge\core_logic.py",
    "Bafoka-teamZ-back\backend_merge\db.py",
    "Bafoka-teamZ-back\backend_merge\bafoka_integration.py",
    "whatsapp-flask-integration.py"
)

foreach ($file in $requiredFiles) {
    if (Test-Path $file) {
        Write-Host "‚úÖ $file" -ForegroundColor Green
    } else {
        Write-Host "‚ùå $file" -ForegroundColor Red
    }
}

# Test 3: Test des endpoints (si les serveurs sont d√©marr√©s)
Write-Host "`nüåê Test 3: Test des endpoints" -ForegroundColor Yellow
Write-Host "üí° Assurez-vous que les serveurs sont d√©marr√©s avant ce test" -ForegroundColor Cyan

$endpoints = @(
    @{Url="http://localhost:5000/health"; Name="Backend Flask"},
    @{Url="http://localhost:3000/health"; Name="WhatsApp Integration"}
)

$allEndpointsOK = $true
foreach ($endpoint in $endpoints) {
    if (-not (Test-Endpoint -Url $endpoint.Url -Name $endpoint.Name)) {
        $allEndpointsOK = $false
    }
}

# Test 4: Test d'int√©gration WhatsApp
Write-Host "`nüì± Test 4: Test d'int√©gration WhatsApp" -ForegroundColor Yellow
if ($allEndpointsOK) {
    try {
        $webhookData = "From=whatsapp:+1234567890&Body=/help"
        $response = Invoke-WebRequest -Uri "http://localhost:3000/webhook" -Method POST -Body $webhookData -ContentType "application/x-www-form-urlencoded" -TimeoutSec 10
        
        if ($response.StatusCode -eq 200) {
            Write-Host "‚úÖ Webhook WhatsApp fonctionne" -ForegroundColor Green
            Write-Host "üìù R√©ponse: $($response.Content.Substring(0, [Math]::Min(100, $response.Content.Length)))..." -ForegroundColor Cyan
        } else {
            Write-Host "‚ùå Webhook WhatsApp - Status: $($response.StatusCode)" -ForegroundColor Red
        }
    } catch {
        Write-Host "‚ùå Webhook WhatsApp - Erreur: $($_.Exception.Message)" -ForegroundColor Red
    }
} else {
    Write-Host "‚è≠Ô∏è Test WhatsApp ignor√© - Serveurs non disponibles" -ForegroundColor Yellow
}

# R√©sum√© des tests
Write-Host "`nüéØ R√©sum√© des Tests" -ForegroundColor Green
Write-Host "=" * 40 -ForegroundColor Cyan

if ($allEndpointsOK) {
    Write-Host "‚úÖ Syst√®me pr√™t pour les tests d'int√©gration!" -ForegroundColor Green
    Write-Host "üöÄ Vous pouvez maintenant tester les commandes WhatsApp" -ForegroundColor Cyan
} else {
    Write-Host "‚ùå Des probl√®mes ont √©t√© d√©tect√©s" -ForegroundColor Red
    Write-Host "üí° Utilisez les scripts de d√©marrage pour r√©soudre les probl√®mes" -ForegroundColor Yellow
}

Write-Host "`nüìã Commandes de d√©marrage disponibles:" -ForegroundColor Yellow
Write-Host "‚Ä¢ .\start_backend.ps1 - D√©marrer le backend Flask" -ForegroundColor Cyan
Write-Host "‚Ä¢ .\start_whatsapp.ps1 - D√©marrer le serveur WhatsApp" -ForegroundColor Cyan
Write-Host "‚Ä¢ .\test_backend.py - Test Python du backend" -ForegroundColor Cyan

Write-Host "`n‚è∏Ô∏è Appuyez sur une touche pour continuer..." -ForegroundColor Yellow
$null = $Host.UI.RawUI.ReadKey("NoEcho,IncludeKeyDown")
